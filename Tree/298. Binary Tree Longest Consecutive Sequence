298. Binary Tree Longest Consecutive Sequence
Medium

305

76

Favorite

Share
Given a binary tree, find the length of the longest consecutive sequence path.

The path refers to any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The longest consecutive path need to be from parent to child (cannot be the reverse).

Example 1:

Input:

   1
    \
     3
    / \
   2   4
        \
         5

Output: 3

Explanation: Longest consecutive sequence path is 3-4-5, so return 3.

class Solution {
public:
    int longestConsecutive(TreeNode* root) {
        if(!root) return 0;
        helper(root);
        return res;
    }
    
    int helper(TreeNode *root)
    {
        if(!root) return 0;
        int left = helper(root->left);
        int right = helper(root->right);
        int len = 1;
        if(root->left && root->val == root->left->val - 1)
        {
            len = len + left;
        }
        if(root->right && root->val == root->right->val - 1)
        {
            len = max(len, right + 1);
        }
        res = max(res, len);
        return len;
    }
    
private:
    int res = 0;
};
