145. Binary Tree Postorder Traversal
Hard

891

42

Favorite

Share
Given a binary tree, return the postorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [3,2,1]
Follow up: Recursive solution is trivial, could you do it iteratively?

class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) 
    {
        vector<int>results;
        stack<TreeNode*>Stack;
        unordered_set<TreeNode*>Set;
        
        while (!Stack.empty() || root!=NULL)
        {
            if (root!=NULL)
            {
                Stack.push(root);
                root=root->left;
            }
            else
            {
                root=Stack.top();
                if (Set.find(root)==Set.end())
                {
                    Set.insert(root);
                    root = root->right;
                }
                else
                {
                    results.push_back(root->val);
                    Stack.pop();
                    root=NULL;
                }
            }
        }
        
        return results;
    }
};
