98. Validate Binary Search Tree
Medium

1932

293

Favorite

Share
Given a binary tree, determine if it is a valid binary search tree (BST).

Assume a BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.

class Solution {
public:
    bool isValidBST(TreeNode* root) {
        TreeNode *pre = NULL;
        return helper(root, pre);
    }
    
    bool helper(TreeNode *root, TreeNode * &pre)
    {
        if(!root) return true;
        if(!helper(root->left, pre)) return false;
        if(pre)
        {
            if(pre->val >= root->val)
                return false;
        }
        pre = root;
        return helper(root->right, pre);
    }
};
