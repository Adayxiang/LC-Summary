222. Count Complete Tree Nodes
Medium

950

128

Favorite

Share
Given a complete binary tree, count the number of nodes.

Note:

Definition of a complete binary tree from Wikipedia:
In a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.

Example:

Input: 
    1
   / \
  2   3
 / \  /
4  5 6

Output: 6

class Solution {
public:
    int countNodes(TreeNode* root) {
        int hLeft = 0, hRight = 0;
        TreeNode *pLeft = root, *pRight = root;
        while(pLeft)
        {
            ++hLeft;
            pLeft = pLeft->left;
        }
        while(pRight)
        {
            ++hRight;
            pRight = pRight->right;
        }
        if(hLeft == hRight) return pow(2,hLeft) - 1;
        return countNodes(root->left) + countNodes(root->right) + 1;
    }
};
