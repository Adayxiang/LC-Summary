"
Summary:
TC:O()
SC:O()
Similar Problems:
Follow-Up:
Comments:
"
Problem:
Given a string, find the minimum number of characters to be inserted to convert it to palindrome.
For Example:
ab: Number of insertions required is 1. bab or aba
aa: Number of insertions required is 0. aa
abcd: Number of insertions required is 3. dcbabcd

Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is S.

Output:

Print the minimum number of characters.

Constraints:

1 ≤ T ≤ 50
1 ≤ S ≤ 40

Example:

Input:
3
abcd
aba
geeks

Output:
3
0
3


public class Main {
      private static int minEditDistance(String str){
            if(str == null || str.length() <= 1) return 0;
            int n = str.length();
// dp[i, j] = min edit distance for substring (i , j);
            int[][] dp = new int[n][n];
            for(int i = 1; i < n; i++){
                  for(int j = i; j >= 0; j--){
                        if(j == i) {
                              dp[j][i] = dp[i][j] = 0;
                        } else {
                              if(str.charAt(i) == str.charAt(j)){
                                    dp[j][i] = dp[i][j] = (j + 1 == i) ? 0: dp[j + 1][i - 1];
                              } 
                              else {
                                    dp[j][i] = dp[i][j] = (j + 1 == i) ? 1: Math.min(dp[j + 1][i], dp[j][i- 1]) + 1;
                              }
                        }
                  }
            } return dp[0][n - 1];
      }
}
