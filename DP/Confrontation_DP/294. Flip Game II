"
Summary:Watch out the backtracking;It should be included in both if and not if;
TC:O(n2)
SC:O(1)
Similar Problems:
Follow-Up:
Comments:
"

class Solution {
public:
    bool canWin(string s) {
        if(s.size() <= 1) return false;
        int flag = 1;
        return helper(s, 0, s.size(), flag);
    }
    
    bool helper(string &s, int start, int end, int flag)
    {
        if(flag == 1)
        {
            for(int i = 1; i < end; ++i)
            {
                if(s[i] == '+' && s[i - 1] == '+')
                {
                    s[i] = '-';
                    s[i-1] = '-';
                    if(helper(s, i + 1, end, -flag))
                    {
                        s[i] = '+';
                        s[i-1] = '+';
                        return true;
                    }
                    s[i] = '+';
                    s[i-1] = '+';
                }
            }
            return false;
        }
        else
        {
            for(int i = 1; i < end; ++i)
            {
                if(s[i] == '+' && s[i - 1] == '+')
                {
                    s[i] = '-';
                    s[i-1] = '-';
                    if(!helper(s, i + 1, end, -flag))
                    {
                        s[i] = '+';
                        s[i-1] = '+';
                        return false;
                    }
                    s[i] = '+';
                    s[i-1] = '+';
                }
            }
            return true;
        }
    }
};
