78. Subsets
Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> res;
        if(nums.size() == 0) return res;
        vector<int> tmp;
        helper(nums, res, tmp, 0);
        return res;
    }
    
    void helper(vector<int>& nums, vector<vector<int>> &res, vector<int> &tmp, int index)
    {
        res.push_back(tmp);
        if(index >= nums.size()) return;
        for(int i = index; i < nums.size(); ++i)
        {
            tmp.push_back(nums[i]);
            helper(nums, res, tmp, i + 1);
            tmp.pop_back();
        }
        return;
    }
};
