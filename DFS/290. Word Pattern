290. Word Pattern
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:

Input: pattern = "abba", str = "dog cat cat dog"
Output: true
Example 2:

Input:pattern = "abba", str = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false
Example 4:

Input: pattern = "abba", str = "dog dog dog dog"
Output: false
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters that may be separated by a single space.

class Solution {
public:
    bool wordPattern(string pattern, string str) {
        vector<string> strVec;
        if(str.size() == 0) return pattern.size() == 0;
        int pre = 0;
        for(int i = 0; i < str.size(); ++i)
        {
            if(str[i] == ' ')
            {
                strVec.push_back(str.substr(pre, i - pre));
                pre = i + 1;
            }    
        }
        strVec.push_back(str.substr(pre, str.size() - pre));
        if(pattern.size() != strVec.size()) return false;
        unordered_map<string, char> patternMap;
        unordered_set<char> patternSet;
        for(int i = 0; i < pattern.size(); ++i)
        {
            if(patternMap.find(strVec[i]) == patternMap.end())
            {
                if(patternSet.find(pattern[i]) == patternSet.end())
                {
                    patternSet.insert(pattern[i]);
                    patternMap[strVec[i]] = pattern[i];
                }   
                else
                    return false;
            }
            else
            {
                if(patternMap[strVec[i]] != pattern[i])
                    return false;
            }
        }
        return true;
    }
};
