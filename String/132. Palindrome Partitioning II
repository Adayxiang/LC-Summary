132. Palindrome Partitioning IIGiven a string s, partition s such that every substring of the partition is a palindrome.

Return the minimum cuts needed for a palindrome partitioning of s.

Example:

Input: "aab"
Output: 1
Explanation: The palindrome partitioning ["aa","b"] could be produced using 1 cut.

class Solution {
public:
    int minCut(string s) {
        int n = s.size();
        if(n == 0) return 0;
        vector<vector<bool>> isPalindrome(n, vector<bool>(n, false));
        for(int gap = 0; gap < n; ++gap)
        {
            for(int i = 0, j = i + gap; j < n; ++i, ++j)
            {
                if(i == j) isPalindrome[i][j] = true;
                else
                {
                    if(s[i] == s[j] && (j - i <= 2 || isPalindrome[i+1][j-1]))
                    {
                        isPalindrome[i][j] = true;
                    }
                }
            }
        }
        
        vector<int> len(n+1, 0);
        for(int i = 0; i <= n; ++i)
        {
            len[i] = i - 1;
        }
        for(int i = 0; i < n; ++i)
        {
            for(int j = 0; j <= i; ++j)
            {
                if(isPalindrome[j][i] == true)
                {
                    len[i+1] = min(len[i+1], len[j] + 1);
                }
            }
        }
        return len[n];
    }
};
