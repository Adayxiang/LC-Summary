214. Shortest Palindrome
Given a string s, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.

Example 1:

Input: "aacecaaa"
Output: "aaacecaaa"
Example 2:

Input: "abcd"
Output: "dcbabcd"

class Solution {
public:
    string shortestPalindrome(string s) {
        int n = s.size();
        if(n <= 1) return s;
        vector<int> kmp = getKmpTable(s + "#" + string(s.rbegin(), s.rend()));
        
        int length = kmp[kmp.size() - 1];
        
        string last = s.substr(length);
        reverse(last.begin(), last.end());
        return last + s;
    }
    
    vector<int> getKmpTable(string pattern)
    {
        int M = pattern.size();
        vector<int> next(M, 0);
        int k = 0;
        
        for(int q = 1; q < M; ++q)
        {
            while(k > 0 && pattern[k] != pattern[q])
            {
                k = next[k-1];
            }
            if(pattern[k] == pattern[q])
            {
                ++k;
            }
            next[q] = k;
        }
        return next;
    }
};
