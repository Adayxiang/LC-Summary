151. Reverse Words in a String
Given an input string, reverse the string word by word.

 

Example 1:

Input: "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: "  hello world!  "
Output: "world! hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.

class Solution {
public:
    string reverseWords(string s) {
        if(s.size() == 0) return "";
        vector<char> str;
        int i = 0;
        
        while(i < s.size() && s[i] == ' ')
        {
            ++i;
        }
        for(; i < s.size(); ++i)
        {
            if(i - 1 >= 0 && s[i] == ' ' && s[i - 1] == ' ')
            {
                continue;
            }
            else
            {
                str.push_back(s[i]);
            }
        }
        while(str.size() != 0 && str.back() == ' ') str.pop_back();
        
        reverseWords2(str);
        for(int i = 0; i < str.size(); ++i)
        {
            s[i] = str[i];
        }
        s.resize((int)(str.size()));
        return s;
    }
    
    void reverseWords2(vector<char>& str) {
        int wordStart = 0;
        int index = 0;
        
        while(index < str.size())
        {
            while(index < str.size() && str[index] != ' ')
            {
                ++index;
            }
            reverse2(str, wordStart, index - 1);
            index++;
            wordStart = index;
        }
        reverse2(str, 0, str.size() - 1);
    }
    
    void reverse2(vector<char> &s, int start, int end)
    {
        while(start < end)
        {
            char tmp = s[start];
            s[start] = s[end];
            s[end] = tmp;
            ++start;
            --end;
        }
    }
};
