43. Multiply Strings
Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.

Example 1:

Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:

Input: num1 = "123", num2 = "456"
Output: "56088"
Note:

The length of both num1 and num2 is < 110.
Both num1 and num2 contain only digits 0-9.
Both num1 and num2 do not contain any leading zero, except the number 0 itself.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

class Solution {
public:
    string multiply(string num1, string num2) {
        if(num1 == "0" || num2 == "0") return "0";
        int n1 = num1.size(), n2 = num2.size();
        vector<int> tmp(n1+n2, 0);
        for(int i = 0; i < n1; ++i)
        {
            for(int j = 0; j < n2; ++j)
            {
                tmp[i+j] += ((num1[n1 - i - 1] - '0') * (num2[n2 - j - 1] - '0'));
            }
        }
        int c = 0;
        int val = 0;
        string res;
        for(int i = 0; i < n1 + n2; ++i)
        {
            val = (c + tmp[i]) % 10;
            c = (c + tmp[i]) / 10;
            res.push_back(val + '0');
        }
        if(res.back() == '0') res.pop_back();
        reverse(res.begin(), res.end());
        return res;
        
    }
};
