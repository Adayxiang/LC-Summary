324. Wiggle Sort II
Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example 1:

Input: nums = [1, 5, 1, 1, 6, 4]
Output: One possible answer is [1, 4, 1, 5, 1, 6].
Example 2:

Input: nums = [1, 3, 2, 2, 3, 1]
Output: One possible answer is [2, 3, 1, 3, 1, 2].
Note:
You may assume all input has valid answer.

Follow Up:
Can you do it in O(n) time and/or in-place with O(1) extra space?

class Solution {
public:
    void wiggleSort(vector<int>& nums) {
        int n = nums.size();
        if(n < 2) return;
        sort(nums.begin(), nums.end());
        vector<int> ans(n,0);
        int index = n - 1;
        
        for(int i = 1; i < n; --index)
        {
            ans[i] = nums[index];
            i += 2;
        }
        
        for(int i = 0; i < n; --index)
        {
            ans[i] = nums[index];
            i += 2;
        }
        
        for(int i = 0; i < n; ++i)
        {
            nums[i] = ans[i];
        }
        return;
    }
};
