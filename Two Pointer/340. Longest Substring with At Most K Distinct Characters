340. Longest Substring with At Most K Distinct Characters
Given a string, find the length of the longest substring T that contains at most k distinct characters.

Example 1:

Input: s = "eceba", k = 2
Output: 3
Explanation: T is "ece" which its length is 3.
Example 2:

Input: s = "aa", k = 1
Output: 2
Explanation: T is "aa" which its length is 2.


class Solution {
public:
    int lengthOfLongestSubstringKDistinct(string s, int k) {
        if(s.size() == 0) return 0;
        unordered_set<char> exsist;
        vector<int> store(256, 0);
        int n = s.size();
        int res = 0;
        int left = 0, right = 0;
        while(right < n)
        {
            while(exsist.size() > k)
            {
                store[s[left]]--;
                if(store[s[left]] == 0) exsist.erase(s[left]);
                left++;
            }
            res = max(res, right - left);
            store[s[right]]++;
            if(store[s[right]] > 0) exsist.insert(s[right]);
            right++;
        }
        if(exsist.size() <= k)
        {
            res = max(res, right - left);
        }
        return res;
    }
};
