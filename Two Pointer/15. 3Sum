15. 3Sum
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> res;
        if(n <= 2) return res;
        sort(nums.begin(), nums.end());
        for(int i = 0; i + 2 < n; ++i)
        {
            int left = i + 1, right = n - 1;
            while(left < right)
            {
                int sum = nums[i] + nums[left] + nums[right];
                if(sum == 0)
                {
                    res.push_back({nums[i], nums[left], nums[right]});
                    while(left + 1 < right && nums[left] == nums[left + 1]) ++left;
                    while(left + 1 < right && nums[right] == nums[right - 1]) --right;
                    ++left, --right;
                }
                else if(sum > 0)
                {
                    --right;
                }
                else
                {
                    ++left;
                }
            }
            while(i + 2 < n && nums[i] == nums[i+1]) ++i;
        }
        return res;
        
    }
};
