3. Longest Substring Without Repeating Characters
Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
Note that the answer must be a substring, "pwke" is a subsequence and not a substring.


class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int n = s.size();
        if(n == 0) return 0;
        vector<int> record(256, 0);
        int left = 0, right = 0;
        int res = 0;
        while(right < n)
        {
            while(left <= right && record[s[right]] >= 1)
            {
                record[s[left++]]--;
            }
            res = max(res, right - left + 1);
            record[s[right++]]++;
        }
        
        if(record[s[right-1]] < 2)
        {
            res = max(res, right - left);
        }
        return res;
        
    }
};

             
        
